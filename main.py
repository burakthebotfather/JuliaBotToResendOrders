import asyncio
import re
import os
from datetime import datetime, timedelta
from zoneinfo import ZoneInfo

from aiogram import Bot, Dispatcher, F
from aiogram.client.default import DefaultBotProperties
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    CallbackQuery,
)

API_TOKEN = os.getenv("BOT_TOKEN", "YOUR_TOKEN_HERE")
UNIQUE_USER_ID = int(os.getenv("UNIQUE_USER_ID", 542345855))

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (UTC+3)
TZ = ZoneInfo("Europe/Minsk")

# chat_id -> thread_id
ALLOWED_THREADS = {
    -1002079167705: 7340,
    -1002387655137: 9,
    -1002423500927: 4,
    -1002178818697: 4,
    -1002477650634: 4,
    -1002660511483: 4,
    -1002864795738: 4,
    -1002360529455: 4,
    -1002538985387: 4,
}

# chat_id -> readable name
CHAT_NAMES = {
    -1002079167705: "A. Mousse Art Bakery - –ë–µ–ª–∏–Ω—Å–∫–æ–≥–æ, 23",
    -1002387655137: "B. Millionroz.by - –¢–∏–º–∏—Ä—è–∑–µ–≤–∞, 67",
    -1002423500927: "E. Flovi.Studio - –¢–∏–º–∏—Ä—è–∑–µ–≤–∞, 65–ë",
    -1002178818697: "H. Kudesnica.by - –°—Ç–∞—Ä–æ–≤–∏–ª–µ–Ω—Å–∫–∏–π —Ç—Ä–∞–∫—Ç, 10",
    -1002477650634: "I. Cvetok.by - –í–æ—Å—Ç–æ—á–Ω–∞—è, 41",
    -1002660511483: "K. Pastel Flowers - –°—É—Ä–≥–∞–Ω–æ–≤–∞, 31",
    -1002864795738: "G. –¶–≤–µ—Ç—ã –ú–∏—Ä–∞ - –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è, 6",
    -1002360529455: "333. –¢–ï–°–¢ –ë–û–¢–û–í - 1-–π –ù–∞–≥–∞—Ç–∏–Ω—Å–∫–∏–π –ø—Ä-–¥",
    -1002538985387: "L. Lamour.by - –ö—Ä–æ–ø–æ—Ç–∫–∏–Ω–∞, 84",
}

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# –°—á—ë—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ –ø–æ –¥–∞—Ç–µ
message_counter = {"date": None, "count": 0}

# mapping: admin_message_id -> info dict
# info keys:
#   orig_chat_id: int
#   orig_msg_id: int
#   orig_bot_reply_id: int  # id —Å–æ–æ–±—â–µ–Ω–∏—è-–æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ ("–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç..." –∏ —Ç.–ø.)
#   orig_notification_msg_id: int | None  # id –ø–æ–º–µ—Ç–∫–∏ "–î–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è @nik" –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ (–ø–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è)
#   admin_notification_msg_id: int | None  # id –∫–æ–ø–∏–∏ "–î–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è @nik" –≤ –ª—Å –∞–¥–º–∏–Ω–∞ (—É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5–º–∏–Ω)
#   admin_confirm_msg_id: int | None       # id —Å–æ–æ–±—â–µ–Ω–∏—è "–ì–æ—Ç–æ–≤–æ ‚Äî —É–≤–µ–¥–æ–º–∏–ª —á–∞—Ç." –≤ –ª—Å –∞–¥–º–∏–Ω–∞ (—É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5–º–∏–Ω)
assign_mapping: dict[int, dict] = {}

AUTO_DELETE_DELAY = 5 * 60  # 5 –º–∏–Ω—É—Ç


def is_night_time() -> bool:
    now = datetime.now(TZ).time()
    return now >= datetime.strptime("22:00", "%H:%M").time() or now < datetime.strptime("08:00", "%H:%M").time()


def get_request_number():
    today = datetime.now(TZ).strftime("%d.%m.%Y")
    if message_counter["date"] != today:
        message_counter["date"] = today
        message_counter["count"] = 0
    message_counter["count"] += 1
    return f"{message_counter['count']:02d} / {today}"


def validate_contact(text: str) -> str:
    if not text:
        return "missing"
    cleaned = text.replace(" ", "").replace("-", "").replace("(", "").replace(")", "")
    belarus_pattern = re.compile(r"(\+375\d{9}|80(25|29|33|44)\d{7})")
    if belarus_pattern.search(cleaned):
        return "ok"
    if "@" in text:
        return "ok"
    if re.search(r"\+?\d{7,}", cleaned):
        return "invalid"
    return "missing"


async def schedule_admin_delete(admin_sent_msg_id: int, delay: int = AUTO_DELETE_DELAY):
    """–ß–µ—Ä–µ–∑ delay —Å–µ–∫—É–Ω–¥ —É–¥–∞–ª—è–µ–º –≤ –õ–° –∞–¥–º–∏–Ω–∞ admin_notification_msg_id –∏ admin_confirm_msg_id (–µ—Å–ª–∏ –µ—Å—Ç—å)."""
    await asyncio.sleep(delay)
    info = assign_mapping.get(admin_sent_msg_id)
    if not info:
        return

    admin_notif_id = info.get("admin_notification_msg_id")
    admin_confirm_id = info.get("admin_confirm_msg_id")

    # —É–¥–∞–ª—è–µ–º —Å–Ω–∞—á–∞–ª–∞ "–î–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è @nik" –≤ –õ–° –∞–¥–º–∏–Ω–∞
    if admin_notif_id:
        try:
            await bot.delete_message(chat_id=UNIQUE_USER_ID, message_id=admin_notif_id)
        except Exception:
            pass

    # –∑–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º "–ì–æ—Ç–æ–≤–æ ‚Äî —É–≤–µ–¥–æ–º–∏–ª —á–∞—Ç."
    if admin_confirm_id:
        try:
            await bot.delete_message(chat_id=UNIQUE_USER_ID, message_id=admin_confirm_id)
        except Exception:
            pass

    # –æ—á–∏—â–∞–µ–º mapping
    assign_mapping.pop(admin_sent_msg_id, None)


@dp.message(F.chat.id.in_(ALLOWED_THREADS.keys()))
async def handle_message(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫–∏ –∏–∑ —á–∞—Ç–æ–≤"""
    if message.message_thread_id != ALLOWED_THREADS.get(message.chat.id):
        return
    if len(message.text or "") < 50:
        return
    if message.from_user.id == UNIQUE_USER_ID:
        return

    request_number = get_request_number()
    chat_name = CHAT_NAMES.get(message.chat.id, f"Chat {message.chat.id}")
    status = validate_contact(message.text)

    night = is_night_time()

    if night:
        reply_text = "–£–∂–µ –Ω–µ –æ–Ω–ª–∞–π–Ω üåÉ\n–ù–∞–∫–∞–ø–ª–∏–≤–∞—é –∑–∞—è–≤–∫–∏ - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–º —É—Ç—Ä–æ–º."
    else:
        if status == "ok":
            reply_text = "–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ —Ä–∞–±–æ—Ç—É."
        elif status == "missing":
            reply_text = (
                "–ù–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. "
                "–î–æ—Å—Ç–∞–≤–∫–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—é. "
                "–†–∏—Å–∫–∏ - –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ."
            )
        else:
            reply_text = (
                "–ó–∞–∫–∞–∑ –Ω–µ –ø—Ä–∏–Ω—è—Ç –≤ —Ä–∞–±–æ—Ç—É. "
                "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ –∑–∞—è–≤–∫–µ —É–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +375–•–•–•–•–•–•–•–•–• "
                "–∏–ª–∏ –Ω–∏–∫ Telegram, –∏—Å–ø–æ–ª—å–∑—É—è —Å–∏–º–≤–æ–ª @."
            )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º id –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ
    try:
        bot_reply = await message.reply(reply_text)
        bot_reply_id = bot_reply.message_id
    except Exception:
        bot_reply_id = None

    # –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    header = f"{request_number}\n{chat_name}\n\n"
    forward_text = header + (message.text or "")
    if status == "invalid":
        forward_text = "‚ùå –û–¢–ö–õ–û–ù–ï–ù ‚ùå\n\n" + forward_text
    if night:
        forward_text = "–ù–û–ß–ù–û–ô –ó–ê–ö–ê–ó üåô\n\n" + forward_text

    # –∫–Ω–æ–ø–∫–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ" –ø–æ–¥ –∫–∞—Ä—Ç–æ—á–∫–æ–π –≤ –õ–° –∞–¥–º–∏–Ω–∞
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–í—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ", callback_data="done")]
    ])

    sent = await bot.send_message(
        UNIQUE_USER_ID,
        forward_text,
        reply_markup=kb,
        disable_notification=night
    )

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å: admin_sent_msg_id -> –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    assign_mapping[sent.message_id] = {
        "orig_chat_id": message.chat.id,
        "orig_msg_id": message.message_id,
        "orig_bot_reply_id": bot_reply_id,
        "orig_notification_msg_id": None,
        "admin_notification_msg_id": None,
        "admin_confirm_msg_id": None,
    }


@dp.message(F.from_user.id == UNIQUE_USER_ID, F.reply_to_message)
async def handle_assign_reply(message: Message):
    """
    –ê–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –±–æ—Ç–∞ –Ω–∏–∫–æ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.
    –£–¥–∞–ª—è–µ–º –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ "–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç..." (–±–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç),
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∏—Å—Ö–æ–¥–Ω—ã–π —á–∞—Ç –∏ –¥–µ–ª–∞–µ–º –∫–æ–ø–∏—é + –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ –õ–° –∞–¥–º–∏–Ω–∞,
    —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç ‚Äî —É–¥–∞–ª—è–µ–º —ç—Ç–∏ –¥–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –õ–° –∞–¥–º–∏–Ω–∞.
    """
    reply_to = message.reply_to_message
    if not reply_to:
        return

    admin_sent_msg_id = reply_to.message_id
    info = assign_mapping.get(admin_sent_msg_id)
    if not info:
        await message.reply("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–π –∑–∞—è–≤–∫–µ —É—Å—Ç–∞—Ä–µ–ª–∞ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    target = (message.text or "").strip()
    if not target.startswith("@") or " " in target:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –Ω–∏–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤).")
        return

    orig_chat_id = info["orig_chat_id"]
    orig_msg_id = info["orig_msg_id"]
    orig_bot_reply_id = info.get("orig_bot_reply_id")

    # 1) —É–¥–∞–ª—è–µ–º –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ –±–æ—Ç-–æ—Ç–≤–µ—Ç ("–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç..." –∏ —Ç.–ø.), –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if orig_bot_reply_id:
        try:
            await bot.delete_message(chat_id=orig_chat_id, message_id=orig_bot_reply_id)
        except Exception:
            # –≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
            pass

    # 2) –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–º–µ—Ç–∫—É –≤ –∏—Å—Ö–æ–¥–Ω—ã–π —á–∞—Ç (reply –∫ –∑–∞—è–≤–∫–µ)
    try:
        orig_notif = await bot.send_message(
            orig_chat_id,
            f"–î–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è {target}",
            reply_to_message_id=orig_msg_id,
        )
        info["orig_notification_msg_id"] = orig_notif.message_id
    except Exception as e:
        await message.reply(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞: {e}")
        return

    # 3) –¥–µ–ª–∞–µ–º –∫–æ–ø–∏—é –ø–æ–º–µ—Ç–∫–∏ –≤ –õ–° –∞–¥–º–∏–Ω–∞ (—á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –≤ –ª—Å –∏ –µ—ë –º–æ–∂–Ω–æ –±—ã–ª–æ —É–¥–∞–ª–∏—Ç—å —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç)
    try:
        admin_notif = await bot.send_message(
            UNIQUE_USER_ID,
            f"–î–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è {target}",
            reply_to_message_id=admin_sent_msg_id,
        )
        info["admin_notification_msg_id"] = admin_notif.message_id
    except Exception:
        info["admin_notification_msg_id"] = None

    # 4) –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É "–ì–æ—Ç–æ–≤–æ ‚Äî —É–≤–µ–¥–æ–º–∏–ª —á–∞—Ç."
    try:
        admin_confirm = await message.reply("–ì–æ—Ç–æ–≤–æ ‚Äî —É–≤–µ–¥–æ–º–∏–ª —á–∞—Ç.")
        info["admin_confirm_msg_id"] = admin_confirm.message_id
    except Exception:
        info["admin_confirm_msg_id"] = None

    # –æ–±–Ω–æ–≤–ª—è–µ–º mapping
    assign_mapping[admin_sent_msg_id] = info

    # 5) –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –∞–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏—è (—É–¥–∞–ª–∏—Ç –¥–≤–µ –∑–∞–ø–∏—Å–∏ –≤ –ª—Å –∞–¥–º–∏–Ω–∞)
    asyncio.create_task(schedule_admin_delete(admin_sent_msg_id))

    # (–ù–µ —É–¥–∞–ª—è–µ–º orig_notification_msg –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äî –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –æ–Ω –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —á–∞—Ç–µ.
    #  –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–∂–Ω–æ –∏ –µ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ ‚Äî —Å–∫–∞–∂–∏.)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ done-–∫–Ω–æ–ø–∫–∏: –æ—Å—Ç–∞–≤–ª—è–µ–º –µ—ë –ø–æ–¥ –∏—Å—Ö–æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–Ω–∞ —É–∂–µ —Ç–∞–º).
    # –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥ orig_notification –∏ –ø–æ–¥ admin_notif.
    # –°–µ–π—á–∞—Å –∫–Ω–æ–ø–∫–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ" –ø–æ–¥ –∏—Å—Ö–æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π —É–¥–∞–ª—è–µ—Ç —Å–∞–º—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ) —É–¥–∞–ª—è–µ—Ç orig_notification.


@dp.callback_query(F.data == "done")
async def mark_done(callback: CallbackQuery):
    """–ù–∞–∂–∞–ª–∏ '–í—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ' –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∞–¥–º–∏–Ω—É ‚Äî —É–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –õ–° –∞–¥–º–∏–Ω–∞ –∏, –µ—Å–ª–∏ –µ—Å—Ç—å, –ø–æ–º–µ—Ç–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ."""
    await callback.answer("–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ ‚Äî —Å–∫—Ä—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    admin_msg_id = callback.message.message_id
    info = assign_mapping.get(admin_msg_id)

    # —É–¥–∞–ª—è–µ–º —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–∞—Ä—Ç–æ—á–∫—É) –≤ –õ–° –∞–¥–º–∏–Ω–∞
    try:
        await bot.delete_message(chat_id=UNIQUE_USER_ID, message_id=admin_msg_id)
    except Exception:
        pass

    # –µ—Å–ª–∏ –µ—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ ‚Äî —É–¥–∞–ª—è–µ–º –µ–≥–æ
    if info:
        orig_notif_id = info.get("orig_notification_msg_id")
        orig_chat = info.get("orig_chat_id")
        if orig_notif_id and orig_chat:
            try:
                await bot.delete_message(chat_id=orig_chat, message_id=orig_notif_id)
            except Exception:
                pass
        # —á–∏—Å—Ç–∏–º mapping
        assign_mapping.pop(admin_msg_id, None)


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
